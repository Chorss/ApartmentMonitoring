image: gradle:6.5-jdk11

stages:
  - build
  - test
  - package
  - release

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

services:
  - docker:dind

cache:
  paths:
    - build/libs
    - .gradle/wrapper
    - .gradle/caches

compile:apartment-monitoring:
  stage: build
  script:
    - gradle assemble

test:apartment-monitoring:
  stage: test
  script:
    - gradle test

package:apartment-monitoring:
  stage: package
  script:
    - gradle bootJar
  artifacts:
    paths:
      - application/build/libs/*.jar
    expire_in: 3 days
  only:
    - develop
    - master

release:docker-production:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  script:
    - VERSION="$(cat gradle.properties | grep application.version | cut -d '=' -f2-)"
    - docker build
      --build-arg VERSION="${VERSION}"
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --tag $CI_REGISTRY_IMAGE:$VERSION .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  only:
    - master

release:docker-development:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  script:
    - VERSION="$(cat gradle.properties | grep application.version | cut -d '=' -f2-)"
    - TAG=$VERSION-SNAPSHOT
    - docker build
      --build-arg VERSION="${VERSION}"
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --tag $CI_REGISTRY_IMAGE:$TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$TAG
  only:
    - develop